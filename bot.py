from telegram.ext import ApplicationBuilder, MessageHandler, filters, CallbackQueryHandler, CommandHandler

from gpt import *
from util import *


async def start(update, context):
    dialog.mode = 'main'
    text = load_message('main')
    await send_photo(update, context, "main")
    await send_text(update, context, text)
    await show_main_menu(update, context, {
        'start': '–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞',
        'profile': '–≥–µ–Ω–µ—Ä–∞—Ü–∏—è Tinder-–ø—Ä–æ—Ñ–ª—è üòé',
        'opener': '—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ ü•∞',
        'message': '–ø–µ—Ä–µ–ø–∏—Å–∫–∞ –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ üòà',
        'date': '–ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ üî•',
        'gpt': '–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —á–∞—Ç—É GPT üß†'
    })


async def gpt(update, context):
    dialog.mode = 'gpt'
    text = load_message('gpt')
    await send_photo(update, context, "gpt")
    await send_text(update, context, text)


async def gpt_dialog(update, context):
    text = update.message.text
    prompt = load_prompt('gpt')
    answer = await chatgpt.send_question(prompt, text)
    await send_text(update, context, answer)


async def date(update, context):
    dialog.mode = 'date'
    text = load_message('date')
    await send_photo(update, context, "date")
    await send_text_buttons(update, context, text, {
        "date_grande": "–ê—Ä–∏–∞–Ω–∞ –ì—Ä–∞–Ω–¥–µ",
        "date_robbie": "–ú–∞—Ä–≥–æ –†–æ–±–±–∏",
        "date_zendaya": "–ó–µ–Ω–¥–µ—è",
        "date_gosling": "–†–∞–π–∞–Ω –ì–æ—Å–ª–∏–Ω–≥",
        "date_hardy": "–¢–æ–º –•–∞—Ä–¥–∏"
    })


async def date_dialog(update, context):
    text = update.message.text
    my_message = await send_text(update, context, '–Ω–∞–±–∏—Ä–∞–µ—Ç —Ç–µ–∫—Å—Ç...')
    answer = await chatgpt.add_message(text)
    await my_message.edit_text(answer)


async def date_button(update, context):
    query = update.callback_query.data
    await update.callback_query.answer()
    await send_photo(update, context, query)
    await send_text(update, context, "–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –ü—Ä–∏–≥–ªf—Å–∏—Ç–µ –¥–µ–≤—É—à–∫—É (–ø–∞—Ä–Ω—è) –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ –∑–∞ 5 —Å–æ–æ–±—â–µ–Ω–∏–π")

    prompt = load_prompt(query)
    chatgpt.set_prompt(prompt)


async def hello(update, context):
    if dialog.mode == 'gpt':
        await gpt_dialog(update, context)
    if dialog.mode == 'date':
        await date_dialog(update, context)
    else:

        await send_text(update, context, '*–ü—Ä–∏–≤–µ—Ç*')
        await send_text(update, context, '*–ö–∞–∫ –¥–µ–ª–∞?*')
        await send_text(update, context, '*–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏* - "' + update.message.text + '"!')
        await send_photo(update, context, 'avatar_main')
        await send_text_buttons(update, context, '–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å?', {
            'start': '–ó–∞–ø—É—Å—Ç–∏—Ç—å',
            'stop': '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å'
        })


async def hello_button(update, context):
    query = update.callback_query.data  # –∫–æ–¥ –∫–Ω–æ–ø–∫–∏
    if query == 'start':
        await send_text(update, context, "*–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω*")
    else:
        await send_text(update, context, "*–ü—Ä–æ—Ü–µ—Å—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω*")


dialog = Dialog()
dialog.mode = None


chatgpt = ChatGptService(token='gpt:EG44JHCgWRZcE28XEIsgJFkblB3TKFPdeHKs9DxUsueSBurd')


app = ApplicationBuilder().token("7242301719:AAHoMQNtHgdaJ5BRImu6Ytbkfi2hHa_vIT0").build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("gpt", gpt))
app.add_handler(CommandHandler("date", date))

app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, hello))  # –æ—Ç–∫–ª—é—á–∞–µ–º –∫–æ–º–∞–Ω–¥—ã

app.add_handler(CallbackQueryHandler(date_button, pattern='^date_.*'))
app.add_handler(CallbackQueryHandler(hello_button))
app.run_polling()
